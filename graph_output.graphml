<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d6" for="edge" attr.name="relation" attr.type="string" />
  <key id="d5" for="node" attr.name="type" attr.type="string" />
  <key id="d4" for="node" attr.name="namespace_position" attr.type="string" />
  <key id="d3" for="node" attr.name="end_line" attr.type="long" />
  <key id="d2" for="node" attr.name="start_line" attr.type="long" />
  <key id="d1" for="node" attr.name="declaration_file" attr.type="string" />
  <key id="d0" for="node" attr.name="label" attr.type="string" />
  <graph edgedefault="directed">
    <node id="../test_code/src/test_code.cpp">
      <data key="d0">../test_code/src/test_code.cpp</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">1</data>
      <data key="d3">114</data>
      <data key="d4">test_code/src/test_code.cpp</data>
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Entities">
      <data key="d0">../test_code/src/test_code.cpp#Entities</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">3</data>
      <data key="d3">72</data>
      <data key="d4">Entities</data>
      <data key="d5">DECL</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Entities::Person::Person(const CustomTypes::StringType &amp; name, CustomTypes::IntegerType age)">
      <data key="d0">../test_code/src/test_code.cpp#Entities::Person::Person(const CustomTypes::StringType &amp; name, CustomTypes::IntegerType age)</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">5</data>
      <data key="d3">6</data>
      <data key="d4">Entities::Person::Person(const CustomTypes::StringType &amp; name, CustomTypes::IntegerType age)</data>
      <data key="d5">DECL</data>
    </node>
    <node id="../test_code/Include/test_code.h#Entities::Person">
      <data key="d0">../test_code/Include/test_code.h#Entities::Person</data>
      <data key="d1">../test_code/Include/test_code.h</data>
      <data key="d2">16</data>
      <data key="d3">30</data>
      <data key="d4">../test_code/Include/test_code.h#Entities::Person</data>
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/Include/test_code.h#CustomTypes::StringType">
      <data key="d0">../test_code/Include/test_code.h#CustomTypes::StringType</data>
      <data key="d1">../test_code/Include/test_code.h</data>
      <data key="d2">9</data>
      <data key="d3">9</data>
      <data key="d4">../test_code/Include/test_code.h#CustomTypes::StringType</data>
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/Include/test_code.h#CustomTypes::IntegerType">
      <data key="d0">../test_code/Include/test_code.h#CustomTypes::IntegerType</data>
      <data key="d1">../test_code/Include/test_code.h</data>
      <data key="d2">11</data>
      <data key="d3">11</data>
      <data key="d4">../test_code/Include/test_code.h#CustomTypes::IntegerType</data>
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Entities::Person::getName()">
      <data key="d0">../test_code/src/test_code.cpp#Entities::Person::getName()</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">8</data>
      <data key="d3">10</data>
      <data key="d4">Entities::Person::getName()</data>
      <data key="d5">DECL</data>
    </node>
    <node id="/include/c++/13/bits/basic_string.h#basic_string">
      <data key="d0">/include/c++/13/bits/basic_string.h#basic_string</data>
      <data key="d1">/include/c++/13/bits/basic_string.h</data>
      <data key="d2">547</data>
      <data key="d3">553</data>
      <data key="d4">basic_string</data>
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Entities::Person::setName(const CustomTypes::StringType &amp; newName)">
      <data key="d0">../test_code/src/test_code.cpp#Entities::Person::setName(const CustomTypes::StringType &amp; newName)</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">12</data>
      <data key="d3">14</data>
      <data key="d4">Entities::Person::setName(const CustomTypes::StringType &amp; newName)</data>
      <data key="d5">DECL</data>
    </node>
    <node id="/include/c++/13/bits/basic_string.h#operator=">
      <data key="d0">/include/c++/13/bits/basic_string.h#operator=</data>
      <data key="d1">/include/c++/13/bits/basic_string.h</data>
      <data key="d2">811</data>
      <data key="d3">815</data>
      <data key="d4">operator=</data>
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Entities::Person::getAge()">
      <data key="d0">../test_code/src/test_code.cpp#Entities::Person::getAge()</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">16</data>
      <data key="d3">18</data>
      <data key="d4">Entities::Person::getAge()</data>
      <data key="d5">DECL</data>
    </node>
    <node id="../test_code/Include/test_code.h#age">
      <data key="d0">../test_code/Include/test_code.h#age</data>
      <data key="d1">../test_code/Include/test_code.h</data>
      <data key="d2">19</data>
      <data key="d3">19</data>
      <data key="d4">age</data>
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Entities::Person::setAge(CustomTypes::IntegerType newAge)">
      <data key="d0">../test_code/src/test_code.cpp#Entities::Person::setAge(CustomTypes::IntegerType newAge)</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">20</data>
      <data key="d3">22</data>
      <data key="d4">Entities::Person::setAge(CustomTypes::IntegerType newAge)</data>
      <data key="d5">DECL</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Entities::Person::updateName(const CustomTypes::StringType &amp; newName)">
      <data key="d0">../test_code/src/test_code.cpp#Entities::Person::updateName(const CustomTypes::StringType &amp; newName)</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">24</data>
      <data key="d3">27</data>
      <data key="d4">Entities::Person::updateName(const CustomTypes::StringType &amp; newName)</data>
      <data key="d5">DECL</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Entities::Person::updateAge(CustomTypes::IntegerType newAge)">
      <data key="d0">../test_code/src/test_code.cpp#Entities::Person::updateAge(CustomTypes::IntegerType newAge)</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">29</data>
      <data key="d3">32</data>
      <data key="d4">Entities::Person::updateAge(CustomTypes::IntegerType newAge)</data>
      <data key="d5">DECL</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Entities::Person::setFrom(const Person &amp; other)">
      <data key="d0">../test_code/src/test_code.cpp#Entities::Person::setFrom(const Person &amp; other)</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">34</data>
      <data key="d3">37</data>
      <data key="d4">Entities::Person::setFrom(const Person &amp; other)</data>
      <data key="d5">DECL</data>
    </node>
    <node id="../test_code/Include/test_code.h#operator=">
      <data key="d0">../test_code/Include/test_code.h#operator=</data>
      <data key="d1">../test_code/Include/test_code.h</data>
      <data key="d2">16</data>
      <data key="d3">30</data>
      <data key="d4">operator=</data>
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Entities::Company::Company(const CustomTypes::StringType &amp; companyName)">
      <data key="d0">../test_code/src/test_code.cpp#Entities::Company::Company(const CustomTypes::StringType &amp; companyName)</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">39</data>
      <data key="d3">40</data>
      <data key="d4">Entities::Company::Company(const CustomTypes::StringType &amp; companyName)</data>
      <data key="d5">DECL</data>
    </node>
    <node id="../test_code/Include/test_code.h#Entities::Company">
      <data key="d0">../test_code/Include/test_code.h#Entities::Company</data>
      <data key="d1">../test_code/Include/test_code.h</data>
      <data key="d2">32</data>
      <data key="d3">46</data>
      <data key="d4">../test_code/Include/test_code.h#Entities::Company</data>
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Entities::Company::addEmployee(const Person &amp; employee)">
      <data key="d0">../test_code/src/test_code.cpp#Entities::Company::addEmployee(const Person &amp; employee)</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">42</data>
      <data key="d3">44</data>
      <data key="d4">Entities::Company::addEmployee(const Person &amp; employee)</data>
      <data key="d5">DECL</data>
    </node>
    <node id="/include/c++/13/bits/stl_vector.h#push_back">
      <data key="d0">/include/c++/13/bits/stl_vector.h#push_back</data>
      <data key="d1">/include/c++/13/bits/stl_vector.h</data>
      <data key="d2">1280</data>
      <data key="d3">1293</data>
      <data key="d4">push_back</data>
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Entities::Company::getCompanyName()">
      <data key="d0">../test_code/src/test_code.cpp#Entities::Company::getCompanyName()</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">46</data>
      <data key="d3">48</data>
      <data key="d4">Entities::Company::getCompanyName()</data>
      <data key="d5">DECL</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Entities::Company::getEmployees()">
      <data key="d0">../test_code/src/test_code.cpp#Entities::Company::getEmployees()</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">50</data>
      <data key="d3">52</data>
      <data key="d4">Entities::Company::getEmployees()</data>
      <data key="d5">DECL</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Entities::Company::setCompanyName(const CustomTypes::StringType &amp; newCompanyName)">
      <data key="d0">../test_code/src/test_code.cpp#Entities::Company::setCompanyName(const CustomTypes::StringType &amp; newCompanyName)</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">54</data>
      <data key="d3">56</data>
      <data key="d4">Entities::Company::setCompanyName(const CustomTypes::StringType &amp; newCompanyName)</data>
      <data key="d5">DECL</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Entities::Company::updateCompanyName(const CustomTypes::StringType &amp; newCompanyName)">
      <data key="d0">../test_code/src/test_code.cpp#Entities::Company::updateCompanyName(const CustomTypes::StringType &amp; newCompanyName)</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">58</data>
      <data key="d3">61</data>
      <data key="d4">Entities::Company::updateCompanyName(const CustomTypes::StringType &amp; newCompanyName)</data>
      <data key="d5">DECL</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Entities::Company::addEmployeeChain(const Person &amp; employee)">
      <data key="d0">../test_code/src/test_code.cpp#Entities::Company::addEmployeeChain(const Person &amp; employee)</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">63</data>
      <data key="d3">66</data>
      <data key="d4">Entities::Company::addEmployeeChain(const Person &amp; employee)</data>
      <data key="d5">DECL</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Entities::Company::setFrom(const Company &amp; other)">
      <data key="d0">../test_code/src/test_code.cpp#Entities::Company::setFrom(const Company &amp; other)</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">68</data>
      <data key="d3">71</data>
      <data key="d4">Entities::Company::setFrom(const Company &amp; other)</data>
      <data key="d5">DECL</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Actions">
      <data key="d0">../test_code/src/test_code.cpp#Actions</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">74</data>
      <data key="d3">93</data>
      <data key="d4">Actions</data>
      <data key="d5">DECL</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Actions::displayPersonInfo(const Entities::Person &amp; person)">
      <data key="d0">../test_code/src/test_code.cpp#Actions::displayPersonInfo(const Entities::Person &amp; person)</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">76</data>
      <data key="d3">78</data>
      <data key="d4">Actions::displayPersonInfo(const Entities::Person &amp; person)</data>
      <data key="d5">DECL</data>
    </node>
    <node id="/include/c++/13/ostream#operator&lt;&lt;">
      <data key="d0">/include/c++/13/ostream#operator&lt;&lt;</data>
      <data key="d1">/include/c++/13/ostream</data>
      <data key="d2">109</data>
      <data key="d3">116</data>
      <data key="d4">operator&lt;&lt;</data>
      <data key="d5">Entity</data>
    </node>
    <node id="/include/c++/13/ostream#std::operator&lt;&lt;">
      <data key="d0">/include/c++/13/ostream#std::operator&lt;&lt;</data>
      <data key="d1">/include/c++/13/ostream</data>
      <data key="d2">661</data>
      <data key="d3">670</data>
      <data key="d4">std::operator&lt;&lt;</data>
      <data key="d5">Entity</data>
    </node>
    <node id="/include/c++/13/bits/basic_string.h#std::operator&lt;&lt;">
      <data key="d0">/include/c++/13/bits/basic_string.h#std::operator&lt;&lt;</data>
      <data key="d1">/include/c++/13/bits/basic_string.h</data>
      <data key="d2">4031</data>
      <data key="d3">4038</data>
      <data key="d4">std::operator&lt;&lt;</data>
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/Include/test_code.h#getName">
      <data key="d0">../test_code/Include/test_code.h#getName</data>
      <data key="d1">../test_code/Include/test_code.h</data>
      <data key="d2">16</data>
      <data key="d3">30</data>
      <data key="d4">getName</data>
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/Include/test_code.h#getAge">
      <data key="d0">../test_code/Include/test_code.h#getAge</data>
      <data key="d1">../test_code/Include/test_code.h</data>
      <data key="d2">16</data>
      <data key="d3">30</data>
      <data key="d4">getAge</data>
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Actions::displayCompanyInfo(const Entities::Company &amp; company)">
      <data key="d0">../test_code/src/test_code.cpp#Actions::displayCompanyInfo(const Entities::Company &amp; company)</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">80</data>
      <data key="d3">82</data>
      <data key="d4">Actions::displayCompanyInfo(const Entities::Company &amp; company)</data>
      <data key="d5">DECL</data>
    </node>
    <node id="../test_code/Include/test_code.h#getCompanyName">
      <data key="d0">../test_code/Include/test_code.h#getCompanyName</data>
      <data key="d1">../test_code/Include/test_code.h</data>
      <data key="d2">32</data>
      <data key="d3">46</data>
      <data key="d4">getCompanyName</data>
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Actions::displayEmployeeInfo(const Entities::Company &amp; company, CustomTypes::SizeType employeeIndex)">
      <data key="d0">../test_code/src/test_code.cpp#Actions::displayEmployeeInfo(const Entities::Company &amp; company, CustomTypes::SizeType employeeIndex)</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">84</data>
      <data key="d3">86</data>
      <data key="d4">Actions::displayEmployeeInfo(const Entities::Company &amp; company, CustomTypes::SizeType employeeIndex)</data>
      <data key="d5">DECL</data>
    </node>
    <node id="../test_code/Include/test_code.h#CustomTypes::SizeType">
      <data key="d0">../test_code/Include/test_code.h#CustomTypes::SizeType</data>
      <data key="d1">../test_code/Include/test_code.h</data>
      <data key="d2">10</data>
      <data key="d3">10</data>
      <data key="d4">../test_code/Include/test_code.h#CustomTypes::SizeType</data>
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Actions::initializeAndDisplayPersonInfo(const Entities::Person &amp; original)">
      <data key="d0">../test_code/src/test_code.cpp#Actions::initializeAndDisplayPersonInfo(const Entities::Person &amp; original)</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">88</data>
      <data key="d3">92</data>
      <data key="d4">Actions::initializeAndDisplayPersonInfo(const Entities::Person &amp; original)</data>
      <data key="d5">DECL</data>
    </node>
    <node id="../test_code/src/test_code.cpp#">
      <data key="d0">../test_code/src/test_code.cpp#</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">90</data>
      <data key="d3">90</data>
      <data key="d4" />
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/src/test_code.cpp#transformPerson">
      <data key="d0">../test_code/src/test_code.cpp#transformPerson</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">96</data>
      <data key="d3">100</data>
      <data key="d4">transformPerson</data>
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Actions::displayPersonInfo">
      <data key="d0">../test_code/src/test_code.cpp#Actions::displayPersonInfo</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">76</data>
      <data key="d3">78</data>
      <data key="d4">Actions::displayPersonInfo</data>
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/src/test_code.cpp#transformPerson(const Entities::Person &amp; original)">
      <data key="d0">../test_code/src/test_code.cpp#transformPerson(const Entities::Person &amp; original)</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">96</data>
      <data key="d3">100</data>
      <data key="d4">transformPerson(const Entities::Person &amp; original)</data>
      <data key="d5">DECL</data>
    </node>
    <node id="/include/c++/13/bits/basic_string.h#std::operator+">
      <data key="d0">/include/c++/13/bits/basic_string.h#std::operator+</data>
      <data key="d1">/include/c++/13/bits/basic_string.h</data>
      <data key="d2">3673</data>
      <data key="d3">3676</data>
      <data key="d4">std::operator+</data>
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/src/test_code.cpp#main()">
      <data key="d0">../test_code/src/test_code.cpp#main()</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">102</data>
      <data key="d3">113</data>
      <data key="d4">main()</data>
      <data key="d5">DECL</data>
    </node>
    <node id="../test_code/Include/test_code.h#addEmployee">
      <data key="d0">../test_code/Include/test_code.h#addEmployee</data>
      <data key="d1">../test_code/Include/test_code.h</data>
      <data key="d2">32</data>
      <data key="d3">46</data>
      <data key="d4">addEmployee</data>
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Actions::displayCompanyInfo">
      <data key="d0">../test_code/src/test_code.cpp#Actions::displayCompanyInfo</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">80</data>
      <data key="d3">82</data>
      <data key="d4">Actions::displayCompanyInfo</data>
      <data key="d5">Entity</data>
    </node>
    <node id="../test_code/src/test_code.cpp#Actions::initializeAndDisplayPersonInfo">
      <data key="d0">../test_code/src/test_code.cpp#Actions::initializeAndDisplayPersonInfo</data>
      <data key="d1">../test_code/src/test_code.cpp</data>
      <data key="d2">88</data>
      <data key="d3">92</data>
      <data key="d4">Actions::initializeAndDisplayPersonInfo</data>
      <data key="d5">Entity</data>
    </node>
    <edge source="../test_code/src/test_code.cpp" target="../test_code/src/test_code.cpp#Entities">
      <data key="d6">contains_namespace_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp" target="../test_code/src/test_code.cpp#Actions">
      <data key="d6">contains_namespace_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp" target="../test_code/src/test_code.cpp#transformPerson(const Entities::Person &amp; original)">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp" target="../test_code/src/test_code.cpp#main()">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities" target="../test_code/src/test_code.cpp#Entities::Person::Person(const CustomTypes::StringType &amp; name, CustomTypes::IntegerType age)">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities" target="../test_code/src/test_code.cpp#Entities::Person::getName()">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities" target="../test_code/src/test_code.cpp#Entities::Person::setName(const CustomTypes::StringType &amp; newName)">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities" target="../test_code/src/test_code.cpp#Entities::Person::getAge()">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities" target="../test_code/src/test_code.cpp#Entities::Person::setAge(CustomTypes::IntegerType newAge)">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities" target="../test_code/src/test_code.cpp#Entities::Person::updateName(const CustomTypes::StringType &amp; newName)">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities" target="../test_code/src/test_code.cpp#Entities::Person::updateAge(CustomTypes::IntegerType newAge)">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities" target="../test_code/src/test_code.cpp#Entities::Person::setFrom(const Person &amp; other)">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities" target="../test_code/src/test_code.cpp#Entities::Company::Company(const CustomTypes::StringType &amp; companyName)">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities" target="../test_code/src/test_code.cpp#Entities::Company::addEmployee(const Person &amp; employee)">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities" target="../test_code/src/test_code.cpp#Entities::Company::getCompanyName()">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities" target="../test_code/src/test_code.cpp#Entities::Company::getEmployees()">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities" target="../test_code/src/test_code.cpp#Entities::Company::setCompanyName(const CustomTypes::StringType &amp; newCompanyName)">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities" target="../test_code/src/test_code.cpp#Entities::Company::updateCompanyName(const CustomTypes::StringType &amp; newCompanyName)">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities" target="../test_code/src/test_code.cpp#Entities::Company::addEmployeeChain(const Person &amp; employee)">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities" target="../test_code/src/test_code.cpp#Entities::Company::setFrom(const Company &amp; other)">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::Person(const CustomTypes::StringType &amp; name, CustomTypes::IntegerType age)" target="../test_code/Include/test_code.h#Entities::Person">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::Person(const CustomTypes::StringType &amp; name, CustomTypes::IntegerType age)" target="../test_code/Include/test_code.h#CustomTypes::StringType">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::Person(const CustomTypes::StringType &amp; name, CustomTypes::IntegerType age)" target="../test_code/Include/test_code.h#CustomTypes::IntegerType">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::getName()" target="../test_code/Include/test_code.h#CustomTypes::StringType">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::getName()" target="../test_code/Include/test_code.h#Entities::Person">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::getName()" target="/include/c++/13/bits/basic_string.h#basic_string">
      <data key="d6">calls_class_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::setName(const CustomTypes::StringType &amp; newName)" target="../test_code/Include/test_code.h#Entities::Person">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::setName(const CustomTypes::StringType &amp; newName)" target="../test_code/Include/test_code.h#CustomTypes::StringType">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::setName(const CustomTypes::StringType &amp; newName)" target="/include/c++/13/bits/basic_string.h#operator=">
      <data key="d6">calls_class_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::getAge()" target="../test_code/Include/test_code.h#CustomTypes::IntegerType">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::getAge()" target="../test_code/Include/test_code.h#Entities::Person">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::getAge()" target="../test_code/Include/test_code.h#age">
      <data key="d6">calls_class_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::setAge(CustomTypes::IntegerType newAge)" target="../test_code/Include/test_code.h#Entities::Person">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::setAge(CustomTypes::IntegerType newAge)" target="../test_code/Include/test_code.h#CustomTypes::IntegerType">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::updateName(const CustomTypes::StringType &amp; newName)" target="../test_code/Include/test_code.h#Entities::Person">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::updateName(const CustomTypes::StringType &amp; newName)" target="../test_code/Include/test_code.h#CustomTypes::StringType">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::updateName(const CustomTypes::StringType &amp; newName)" target="/include/c++/13/bits/basic_string.h#operator=">
      <data key="d6">calls_class_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::updateAge(CustomTypes::IntegerType newAge)" target="../test_code/Include/test_code.h#Entities::Person">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::updateAge(CustomTypes::IntegerType newAge)" target="../test_code/Include/test_code.h#CustomTypes::IntegerType">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::setFrom(const Person &amp; other)" target="../test_code/Include/test_code.h#Entities::Person">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::setFrom(const Person &amp; other)" target="../test_code/Include/test_code.h#operator=">
      <data key="d6">calls_class_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Person::setFrom(const Person &amp; other)" target="../test_code/Include/test_code.h#age">
      <data key="d6">calls_class_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::Company(const CustomTypes::StringType &amp; companyName)" target="../test_code/Include/test_code.h#Entities::Company">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::Company(const CustomTypes::StringType &amp; companyName)" target="../test_code/Include/test_code.h#CustomTypes::StringType">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::addEmployee(const Person &amp; employee)" target="../test_code/Include/test_code.h#Entities::Company">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::addEmployee(const Person &amp; employee)" target="../test_code/Include/test_code.h#Entities::Person">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::addEmployee(const Person &amp; employee)" target="/include/c++/13/bits/stl_vector.h#push_back">
      <data key="d6">calls_class_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::getCompanyName()" target="../test_code/Include/test_code.h#CustomTypes::StringType">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::getCompanyName()" target="../test_code/Include/test_code.h#Entities::Company">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::getCompanyName()" target="/include/c++/13/bits/basic_string.h#basic_string">
      <data key="d6">calls_class_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::getEmployees()" target="../test_code/Include/test_code.h#Entities::Person">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::getEmployees()" target="../test_code/Include/test_code.h#Entities::Company">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::setCompanyName(const CustomTypes::StringType &amp; newCompanyName)" target="../test_code/Include/test_code.h#Entities::Company">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::setCompanyName(const CustomTypes::StringType &amp; newCompanyName)" target="../test_code/Include/test_code.h#CustomTypes::StringType">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::setCompanyName(const CustomTypes::StringType &amp; newCompanyName)" target="/include/c++/13/bits/basic_string.h#operator=">
      <data key="d6">calls_class_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::updateCompanyName(const CustomTypes::StringType &amp; newCompanyName)" target="../test_code/Include/test_code.h#Entities::Company">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::updateCompanyName(const CustomTypes::StringType &amp; newCompanyName)" target="../test_code/Include/test_code.h#CustomTypes::StringType">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::updateCompanyName(const CustomTypes::StringType &amp; newCompanyName)" target="/include/c++/13/bits/basic_string.h#operator=">
      <data key="d6">calls_class_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::addEmployeeChain(const Person &amp; employee)" target="../test_code/Include/test_code.h#Entities::Company">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::addEmployeeChain(const Person &amp; employee)" target="../test_code/Include/test_code.h#Entities::Person">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::addEmployeeChain(const Person &amp; employee)" target="/include/c++/13/bits/stl_vector.h#push_back">
      <data key="d6">calls_class_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::setFrom(const Company &amp; other)" target="../test_code/Include/test_code.h#Entities::Company">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Entities::Company::setFrom(const Company &amp; other)" target="../test_code/Include/test_code.h#operator=">
      <data key="d6">calls_class_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Actions" target="../test_code/src/test_code.cpp#Actions::displayPersonInfo(const Entities::Person &amp; person)">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Actions" target="../test_code/src/test_code.cpp#Actions::displayCompanyInfo(const Entities::Company &amp; company)">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Actions" target="../test_code/src/test_code.cpp#Actions::displayEmployeeInfo(const Entities::Company &amp; company, CustomTypes::SizeType employeeIndex)">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Actions" target="../test_code/src/test_code.cpp#Actions::initializeAndDisplayPersonInfo(const Entities::Person &amp; original)">
      <data key="d6">contains_fun_decl</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Actions::displayPersonInfo(const Entities::Person &amp; person)" target="../test_code/Include/test_code.h#Entities::Person">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Actions::displayPersonInfo(const Entities::Person &amp; person)" target="/include/c++/13/ostream#operator&lt;&lt;">
      <data key="d6">calls_class_function</data>
    </edge>
    <edge source="/include/c++/13/ostream#operator&lt;&lt;" target="/include/c++/13/ostream#std::operator&lt;&lt;">
      <data key="d6">calls_function</data>
    </edge>
    <edge source="/include/c++/13/ostream#operator&lt;&lt;" target="/include/c++/13/bits/basic_string.h#std::operator&lt;&lt;">
      <data key="d6">calls_function</data>
    </edge>
    <edge source="/include/c++/13/ostream#operator&lt;&lt;" target="../test_code/Include/test_code.h#getName">
      <data key="d6">calls_class_function</data>
    </edge>
    <edge source="/include/c++/13/ostream#operator&lt;&lt;" target="../test_code/Include/test_code.h#getAge">
      <data key="d6">calls_class_function</data>
    </edge>
    <edge source="/include/c++/13/ostream#operator&lt;&lt;" target="../test_code/Include/test_code.h#getCompanyName">
      <data key="d6">calls_class_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Actions::displayCompanyInfo(const Entities::Company &amp; company)" target="../test_code/Include/test_code.h#Entities::Company">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Actions::displayCompanyInfo(const Entities::Company &amp; company)" target="/include/c++/13/ostream#operator&lt;&lt;">
      <data key="d6">calls_class_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Actions::displayEmployeeInfo(const Entities::Company &amp; company, CustomTypes::SizeType employeeIndex)" target="../test_code/Include/test_code.h#Entities::Company">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Actions::displayEmployeeInfo(const Entities::Company &amp; company, CustomTypes::SizeType employeeIndex)" target="../test_code/Include/test_code.h#CustomTypes::SizeType">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Actions::initializeAndDisplayPersonInfo(const Entities::Person &amp; original)" target="../test_code/Include/test_code.h#Entities::Person">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Actions::initializeAndDisplayPersonInfo(const Entities::Person &amp; original)" target="../test_code/src/test_code.cpp#">
      <data key="d6">calls_class_constructor</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#Actions::initializeAndDisplayPersonInfo(const Entities::Person &amp; original)" target="../test_code/src/test_code.cpp#Actions::displayPersonInfo">
      <data key="d6">calls_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#" target="../test_code/Include/test_code.h#Entities::Person">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#" target="../test_code/src/test_code.cpp#transformPerson">
      <data key="d6">calls_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#" target="/include/c++/13/bits/basic_string.h#std::operator+">
      <data key="d6">calls_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#" target="../test_code/Include/test_code.h#getName">
      <data key="d6">calls_class_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#" target="../test_code/Include/test_code.h#getAge">
      <data key="d6">calls_class_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#" target="../test_code/Include/test_code.h#Entities::Company">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#transformPerson(const Entities::Person &amp; original)" target="../test_code/Include/test_code.h#Entities::Person">
      <data key="d6">calls_custom_type</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#transformPerson(const Entities::Person &amp; original)" target="../test_code/src/test_code.cpp#">
      <data key="d6">calls_class_constructor</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#main()" target="../test_code/src/test_code.cpp#">
      <data key="d6">calls_class_constructor</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#main()" target="../test_code/Include/test_code.h#addEmployee">
      <data key="d6">calls_class_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#main()" target="../test_code/src/test_code.cpp#Actions::displayPersonInfo">
      <data key="d6">calls_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#main()" target="../test_code/src/test_code.cpp#Actions::displayCompanyInfo">
      <data key="d6">calls_function</data>
    </edge>
    <edge source="../test_code/src/test_code.cpp#main()" target="../test_code/src/test_code.cpp#Actions::initializeAndDisplayPersonInfo">
      <data key="d6">calls_function</data>
    </edge>
  </graph>
</graphml>
